name: Release
on:
  push:
    branches: [main]
    tags: ["v*"]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'sbt'

      - run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
          PGP_SECRET: ${{ secrets.PGP_SECRET }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}

  publish-plugins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          submodules: recursive

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'sbt'

      - name: 'Build plugins'
        run: sbt -v jena/assembly rdf4j/assembly

      - name: 'Publish plugins (pre-release)'
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1.14.0
        with:
          allowUpdates: true
          prerelease: true
          draft: false
          omitDraftDuringUpdate: false
          makeLatest: false
          tag: dev
          name: "Development build"
          artifacts: 'jena/target/scala-*/*-plugin.jar,rdf4j/target/scala-*/*-plugin.jar'
          generateReleaseNotes: true

      - name: 'Publish plugins (tagged release)'
        if: github.ref != 'refs/heads/main'
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: false
          draft: false
          makeLatest: true
          tag: "${{ env.GITHUB_REF_NAME }}"
          name: "${{ env.GITHUB_REF_NAME }}"
          artifacts: 'jena/target/scala-*/*-plugin.jar,rdf4j/target/scala-*/*-plugin.jar'
          generateReleaseNotes: true

  publish-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip
          cache-dependency-path: 'docs/requirements.txt'

      - name: Install dependencies
        working-directory: ./docs
        run: pip install -r requirements.txt

      - name: Deploy site
        working-directory: ./docs
        run: |
          export TAG='${{ env.GITHUB_REF_NAME }}'
          git fetch origin gh-pages --depth=1
          git config user.name ci-bot
          git config user.email ci-bot@example.com
          if [[ $TAG == v* ]] ; then
            V_MAJOR=`echo ${TAG#v} | awk -F '.' '{print $1}'`
            V_MINOR=`echo ${TAG#v} | awk -F '.' '{print $2}'`
            mike deploy --push --update-aliases "${V_MAJOR}.${V_MINOR}.x" stable "${TAG#v}"
          else
            mike deploy --push --update-aliases dev latest
          fi
