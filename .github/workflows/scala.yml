name: Scala build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  java_latest: 24
  java_publish: 17
  JELLY_TEST_SILENCE_OUTPUT: 'true'

jobs:
  # Run scalatest
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            java: 17
            jena_version: ""
          - os: ubuntu-latest
            java: 17
            jena_version: "5.3.0"
          - os: ubuntu-latest
            java: 21
            jena_version: ""
          - os: ubuntu-latest
            java: 24
            jena_version: ""
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    # This is necessary, as Jena suddenly dropped support for RDF-star in 5.4.0 in favor of RDF1.2.
    # We want to keep RDF-star support a possibility, so we test against Jena 5.3 as well as the latest version.
    # See: https://github.com/Jelly-RDF/jelly-jvm/issues/368
    - name: Switch Jena Version
      shell: bash
      run: |
        if [ $JENA_VERSION ]; then
          sed -i "s/lazy val jenaV = .*/lazy val jenaV = \"$JENA_VERSION\"/g" build.sbt
        fi
      env:
        JENA_VERSION: ${{ matrix.jena_version }}

    - name: Build and test
      shell: bash
      run: sbt -v +test

  test-coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21 # coverage must run on an LTS version

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    - name: Build and test with coverage
      shell: bash
      run: sbt -v coverage +test coverageReport coverageAggregate jacocoAggregate

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        fail_ci_if_error: true # This is an independent check, so it's okay to fail
        slug: Jelly-RDF/jelly-jvm
        token: ${{ secrets.CODECOV_TOKEN }}

  # Test publishing to a local repository
  test-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.java_publish }}

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    - name: Test publishing to a local repository
      run: sbt -v +publishLocal
  
  # Test building assemblies
  test-assembly:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup JDK
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ env.java_publish }}

    - name: Setup SBT
      uses: sbt/setup-sbt@v1

    - name: Test building assemblies
      shell: bash
      run: sbt -v +jenaPlugin/assembly +rdf4jPlugin/assembly

    - name: Test plugins
      shell: bash
      run: |
        echo '_:b <http://ex.org/p> <http://ex.org/o> .' > test.nt
        echo "::group::Jena"
        wget --progress=dot:mega -O jena.tar.gz https://dlcdn.apache.org/jena/binaries/apache-jena-5.5.0.tar.gz
        mkdir -p $RUNNER_TOOL_CACHE/jena
        tar -xzf jena.tar.gz -C $RUNNER_TOOL_CACHE/jena --strip-components=1
        cp jena-plugin/target/jelly-jena-plugin.jar $RUNNER_TOOL_CACHE/jena/lib
        $RUNNER_TOOL_CACHE/jena/bin/riot --stream=jelly test.nt > jena.jelly
        [ -s jena.jelly ]
        echo "::endgroup::"
